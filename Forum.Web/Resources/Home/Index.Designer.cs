//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources.Home {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Index {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Index() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Forum.Web.Resources.Home.Index", typeof(Index).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} comment(s) have been added to this thread..
        /// </summary>
        public static string AddCommentTooltip {
            get {
                return ResourceManager.GetString("AddCommentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start a New Issue.
        /// </summary>
        public static string btnNewThread {
            get {
                return ResourceManager.GetString("btnNewThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click this button to edit the thread. You can access to this because you created the thread..
        /// </summary>
        public static string CanEditTooltip {
            get {
                return ResourceManager.GetString("CanEditTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created.
        /// </summary>
        public static string colCreated {
            get {
                return ResourceManager.GetString("colCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue Summary.
        /// </summary>
        public static string colThreadComment {
            get {
                return ResourceManager.GetString("colThreadComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string colThreadStatus {
            get {
                return ResourceManager.GetString("colThreadStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue Title.
        /// </summary>
        public static string colThreadTitle {
            get {
                return ResourceManager.GetString("colThreadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Case Number.
        /// </summary>
        public static string SpareField {
            get {
                return ResourceManager.GetString("SpareField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue Details.
        /// </summary>
        public static string ThreadDetails {
            get {
                return ResourceManager.GetString("ThreadDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click to view the Issue details.
        /// </summary>
        public static string TitleTooltip {
            get {
                return ResourceManager.GetString("TitleTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Issue has {0} comment(s) that you have not seen yet..
        /// </summary>
        public static string UnreadCommentsBadge {
            get {
                return ResourceManager.GetString("UnreadCommentsBadge", resourceCulture);
            }
        }
    }
}
